//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.480, BuildCommit: c8897fa0f)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1774.3.4.0.0
//
#ifndef CPCharSequence_h
#define CPCharSequence_h
@import Foundation;

#include "CPCopying-Protocol.h"
#include "CPDisposable-Protocol.h"
#include "CPMemoryOwner.h"

@interface CPCharSequence : NSObject <NSCopying, CPCopying, CPDisposable> {
    /* instance variables */
    unsigned int length;
    struct CPPDFChar **charArray;
    unsigned int previousSize;
    unsigned int size;
    CPMemoryOwner *sharedMemory;
    _Bool wasMerged;
}

/* instance methods */
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)finalize;
- (unsigned int)length;
- (void)dispose;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})bounds;
- (_Bool)map:(void * /* function */)map whereNeighborsWith:(id)with passing:(void *)passing;
- (void)sortBy:(void * /* function */)by;
- (void)addChars:(struct CPPDFChar {
    struct CPPDFObject {
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x0;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x1;
        unsigned int x2;
        unsigned int x3;
    } x0;
    unsigned short x1;
    unsigned short x2;
    struct CGPoint {
        double x0;
        double x1;
    } x3;
    struct CGPoint {
        double x0;
        double x1;
    } x4;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x5;
    struct CGSize {
        double x0;
        double x1;
    } x6;
    struct CPPDFStyle *x7;
    double x8;
    int x9;
    long long x10;
} *)chars length:(unsigned int)length;
- (void)addChars:(struct CPPDFChar {
    struct CPPDFObject {
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x0;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x1;
        unsigned int x2;
        unsigned int x3;
    } x0;
    unsigned short x1;
    unsigned short x2;
    struct CGPoint {
        double x0;
        double x1;
    } x3;
    struct CGPoint {
        double x0;
        double x1;
    } x4;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x5;
    struct CGSize {
        double x0;
        double x1;
    } x6;
    struct CPPDFStyle *x7;
    double x8;
    int x9;
    long long x10;
} *)chars length:(unsigned int)length ifTrue:(void * /* function */)true passing:(void *)passing;
- (double)averageRotation;
- (void)resize:(unsigned int)resize;
- (void)addChar:(struct CPPDFChar {
    struct CPPDFObject {
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x0;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x1;
        unsigned int x2;
        unsigned int x3;
    } x0;
    unsigned short x1;
    unsigned short x2;
    struct CGPoint {
        double x0;
        double x1;
    } x3;
    struct CGPoint {
        double x0;
        double x1;
    } x4;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x5;
    struct CGSize {
        double x0;
        double x1;
    } x6;
    struct CPPDFStyle *x7;
    double x8;
    int x9;
    long long x10;
} *)char;
- (void)addCharsFromSequence:(id)sequence;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})boundsFrom:(unsigned int)from length:(unsigned int)length;
- (struct CPPDFChar **)charArray;
- (struct CPPDFChar {
    struct CPPDFObject {
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x0;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x1;
        unsigned int x2;
        unsigned int x3;
    } x0;
    unsigned short x1;
    unsigned short x2;
    struct CGPoint {
        double x0;
        double x1;
    } x3;
    struct CGPoint {
        double x0;
        double x1;
    } x4;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x5;
    struct CGSize {
        double x0;
        double x1;
    } x6;
    struct CPPDFStyle *x7;
    double x8;
    int x9;
    long long x10;
} *)charAtIndex:(unsigned int)index;
- (void)copyToSubsequence:(id)subsequence from:(unsigned int)from length:(unsigned int)length;
- (void)copyToSubsequence:(id)subsequence
                   ifTrue:(void * /* function */)true
                  passing:(void *)passing;
- (id)initSuper;
- (id)initWithChars:(struct CPPDFChar {
    struct CPPDFObject {
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x0;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x1;
        unsigned int x2;
        unsigned int x3;
    } x0;
    unsigned short x1;
    unsigned short x2;
    struct CGPoint {
        double x0;
        double x1;
    } x3;
    struct CGPoint {
        double x0;
        double x1;
    } x4;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x5;
    struct CGSize {
        double x0;
        double x1;
    } x6;
    struct CPPDFStyle *x7;
    double x8;
    int x9;
    long long x10;
} *)chars length:(unsigned int)length;
- (id)initWithSizeFor:(unsigned int)for;
- (_Bool)map:(void * /* function */)map passing:(void *)passing;
- (_Bool)mapToPairs:(void * /* function */)pairs passing:(void *)passing;
- (_Bool)mapToPairsWithIndex:(void * /* function */)index passing:(void *)passing;
- (_Bool)mapWithIndex:(void * /* function */)index
                 from:(unsigned int)from
               length:(unsigned int)length
              passing:(void *)passing;
- (_Bool)mapWithIndex:(void * /* function */)index passing:(void *)passing;
- (void)merge:(id)merge by:(void * /* function */)by;
- (void)mergeByAnchorXIncreasingYDecreasing:(id)ydecreasing;
- (void)mergeByAnchorYDecreasingXIncreasing:(id)xincreasing;
- (id)newSubsequenceFrom:(unsigned int)from length:(unsigned int)length;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})normalizedBounds;
- (void)removeAllChars;
- (void)removeChar;
- (void)removeCharAtIndex:(unsigned int)index;
- (void)removeFrom:(unsigned int)from;
- (_Bool)removeSubsequences:(id)subsequences
                  whereTrue:(void * /* function */)true
                    passing:(void *)passing;
- (_Bool)removeToSubsequence:(id)subsequence
                      ifTrue:(void * /* function */)true
                     passing:(void *)passing;
- (void)replaceCharAtIndex:(unsigned int)index withChar:(struct CPPDFChar {
    struct CPPDFObject {
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x0;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x1;
        unsigned int x2;
        unsigned int x3;
    } x0;
    unsigned short x1;
    unsigned short x2;
    struct CGPoint {
        double x0;
        double x1;
    } x3;
    struct CGPoint {
        double x0;
        double x1;
    } x4;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x5;
    struct CGSize {
        double x0;
        double x1;
    } x6;
    struct CPPDFStyle *x7;
    double x8;
    int x9;
    long long x10;
} *)char;
- (void)sortByAnchorXIncreasingYDecreasing;
- (void)sortByAnchorYDecreasingXIncreasing;
- (void)sortByAnchorYDecreasingXIncreasingApprox;
- (void)splitToSubsequences:(id)subsequences
                  whereTrue:(void * /* function */)true
                    passing:(void *)passing;
- (_Bool)wasMerged;

@end

#endif /* CPCharSequence_h */
