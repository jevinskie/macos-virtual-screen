//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.480, BuildCommit: c8897fa0f)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1774.3.4.0.0
//
#ifndef CPTextLine_h
#define CPTextLine_h
@import Foundation;

#include "CPCharSequence.h"
#include "CPDisposable-Protocol.h"
#include "CPTextObject.h"

@interface CPTextLine : CPTextObject <CPDisposable> {
    /* instance variables */
    CPCharSequence *charSequence;
    struct {
        unsigned int x0;
        unsigned int x1;
        int x2;
        int x3;
        struct CGRect {
            struct CGPoint {
                double x0;
                double x1;
            } x0;
            struct CGSize {
                double x0;
                double x1;
            } x1;
        } x4;
    } *wordArray;
    unsigned int wordCount;
    struct CPInlineContainer {
        unsigned int x0;
        id x1;
        struct CPInlineContainer *x2;
    } *inlineList;
    int lineNumber;
    int columnNumber;
    double baseline;
    _Bool baseLineIsNull;
    struct CGRect {
        struct CGPoint {
            double x;
            double y;
        } origin;
        struct CGSize {
            double width;
            double height;
        } size;
    } normalizedBounds;
    _Bool hasBeenSplit;
    _Bool hasBeenProcessed;
    _Bool maySplit;
    _Bool hasTabs;
    NSArray *columnBreaks;
    NSArray *xsegments;
    int levels;
    float maximumLetterGap;
    float maximumWordGap;
    int tabsBefore;
    _Bool irregular;
    struct CPPDFStyle {
        struct CGColor *x0;
        struct CGColorSpace *x1;
        struct CGColor *x2;
        struct CGColorSpace *x3;
        double x4;
        double x5;
        unsigned char x6;
        unsigned char x7;
        int x8;
        double x9;
        id x10;
        double x11;
        struct CGPDFObject *x12;
        struct CGPDFObject *x13;
        struct CGColor *x14;
        struct CPPDFStyle *x15;
    } *uniformStyle;
    unsigned short uniformStyleFlags;
    double monospaceWidth;
    unsigned int *spacesBefore;
    _Bool disposed;
}

@property(nonatomic) unsigned int leftSpacerIndex;
@property(nonatomic) unsigned int rightSpacerIndex;
@property(nonatomic) _Bool isListItem;
@property(nonatomic) unsigned int listSpacerIndex;
@property(nonatomic) _Bool lineBreakAfter;

/* instance methods */
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)finalize;
- (id)init;
- (id)attributes;
- (void)dispose;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})bounds;
- (unsigned int)wordCount;
- (id)properties;
- (void)accept:(id)accept;
- (_Bool)hasTabs;
- (void)recomputeLevels;
- (int)align;
- (struct CGPoint {
    double x0;
    double x1;
})anchor;
- (void)anchorChunk:(id)chunk atWordIndex:(unsigned int)index;
- (long long)baseLineAscending:(id)ascending;
- (long long)baseLineDescending:(id)descending;
- (long long)baseLineDescendingApprox:(id)approx;
- (double)baseline;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})boundsOfWordAtIndex:(unsigned int)index;
- (_Bool)changesFontAt:(id)at;
- (id)charSequence;
- (id)columnBreaks;
- (struct {
    unsigned int x0;
    unsigned int x1;
    int x2;
    int x3;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x4;
} *)firstWord;
- (void)fitBoundsToChildren;
- (_Bool)hasBeenProcessed;
- (_Bool)hasBeenSplit;
- (_Bool)hasDropCap;
- (_Bool)hasJustifiedAlignment;
- (_Bool)hyphenated;
- (unsigned int)inlineCount;
- (struct CPInlineContainer {
    unsigned int x0;
    id x1;
    struct CPInlineContainer *x2;
} *)inlineList;
- (_Bool)irregular;
- (_Bool)isIndivisible;
- (_Bool)isMonospaced;
- (struct {
    unsigned int x0;
    unsigned int x1;
    int x2;
    int x3;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x4;
} *)lastWord;
- (int)levels;
- (_Bool)mapToWordPairs:(void * /* function */)pairs passing:(void *)passing;
- (_Bool)mapToWordPairsWithIndex:(void * /* function */)index passing:(void *)passing;
- (_Bool)mapToWords:(void * /* function */)words passing:(void *)passing;
- (_Bool)mapToWordsWithIndex:(void * /* function */)index passing:(void *)passing;
- (float)maximumLetterGap;
- (float)maximumWordGap;
- (double)medianFontSize;
- (double)monospaceWidth;
- (id)newTextLineFromWordAt:(unsigned int)at lengthInWords:(unsigned int)words;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})normalizedBounds;
- (_Bool)overlapsHorizontally:(struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})horizontally;
- (_Bool)overlapsWith:(id)with;
- (void)recomputeBaseline;
- (_Bool)removeTextLines:(id)lines whereTrue:(void * /* function */)true passing:(void *)passing;
- (double)rotationAngle;
- (void)setBaseline:(double)baseline;
- (void)setBaselineToNull;
- (void)setCharSequence:(id)sequence;
- (void)setColumnBreaks:(id)breaks;
- (void)setHasBeenProcessed:(_Bool)processed;
- (void)setHasBeenSplit:(_Bool)split;
- (void)setHasTabs:(_Bool)tabs;
- (void)setIrregular:(_Bool)irregular;
- (void)setLevels:(int)levels;
- (void)setMaximumLetterGap:(float)gap;
- (void)setMaximumWordGap:(float)gap;
- (void)setSpaces:(unsigned int)spaces beforeWordAtIndex:(unsigned int)index;
- (void)setTabsBefore:(int)before;
- (unsigned int)spacesBeforeWordAtIndex:(unsigned int)index;
- (_Bool)styleIsUniform:(struct CPPDFStyle **)uniform styleFlags:(unsigned short)flags;
- (int)tabsBefore;
- (long long)topIsAbove:(id)above;
- (void)translateObjectYBy:(double)yby;
- (struct {
    unsigned int x0;
    unsigned int x1;
    int x2;
    int x3;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x4;
} *)wordArray;
- (struct {
    unsigned int x0;
    unsigned int x1;
    int x2;
    int x3;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x4;
} *)wordArrayOfSize:(unsigned int)size;
- (struct {
    unsigned int x0;
    unsigned int x1;
    int x2;
    int x3;
    struct CGRect {
        struct CGPoint {
            double x0;
            double x1;
        } x0;
        struct CGSize {
            double x0;
            double x1;
        } x1;
    } x4;
} *)wordAtIndex:(unsigned int)index;
- (long long)zOrder;

@end

#endif /* CPTextLine_h */
