//
//   Generated by https://github.com/blacktop/ipsw (Version: v3.1.480, BuildCommit: c8897fa0f)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.3, SDK: 14.3, Tool: ld (902.8)
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.3, SDK: 17.3, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1774.3.4.0.0
//
#ifndef CPChunk_h
#define CPChunk_h
@import Foundation;

#include "CPObject.h"

@interface CPChunk : CPObject {
    /* instance variables */
    struct CGRect {
        struct CGPoint {
            double x;
            double y;
        } origin;
        struct CGSize {
            double width;
            double height;
        } size;
    } bounds;
    _Bool shrinksWithChildren;
    _Bool dirtyBounds;
    unsigned int position;
    long long insertionOrder;
}

/* class methods */
+ (float)chooseReferenceFontSizeFrom:(float)from and:(float)and;

/* instance methods */
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)init;
- (void)sortUsingSelector:(SEL)selector;
- (void)remove:(id)remove;
- (double)left;
- (void)setChildren:(id)children;
- (double)top;
- (void)add:(id)add;
- (double)bottom;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})bounds;
- (double)center;
- (float)fontSize;
- (void)removeAll;
- (double)right;
- (void)setBounds:(struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})bounds;
- (void)accept:(id)accept;
- (long long)compareAnchorY:(id)y;
- (long long)compareYBounds:(id)ybounds;
- (struct CGSize {
    double x0;
    double x1;
})advance;
- (long long)compareAnchorX:(id)x;
- (long long)compareXBounds:(id)xbounds;
- (id)newTakeChildren;
- (float)absoluteGapTo:(id)to;
- (void)add:(id)add atIndex:(unsigned int)index;
- (void)addChildrenOf:(id)of;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})adjustToPointBoundary:(struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1; })boundary;
- (float)advanceDeltaAfterSpace;
- (struct CGPoint {
    double x0;
    double x1;
})anchor;
- (_Bool)boundsEqualsRect:(struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})rect accuracy:(double)accuracy;
- (unsigned int)chunkPosition;
- (float)clusterGapTo:(id)to;
- (int)clusterLevelHint;
- (long long)compareAnchorYDescending:(id)ydescending;
- (long long)compareChunkPosition:(id)position;
- (long long)compareCommonAnchorX:(id)x;
- (long long)compareInsertionOrder:(id)order;
- (long long)compareLinearBounds:(id)bounds;
- (long long)compareTopDescending:(id)descending;
- (long long)compareX:(id)x;
- (long long)compareY:(id)y;
- (long long)compareYDescending:(id)ydescending;
- (long long)compareYDescendingX:(id)x;
- (long long)compareZ:(id)z;
- (long long)compareZDescending:(id)zdescending;
- (id)copyAndSplitChildrenAtIndex:(unsigned int)index;
- (id)describeBounds;
- (void)fitBoundsToChildren;
- (_Bool)geometricallyContains:(id)contains;
- (long long)insertionOrder;
- (_Bool)intersectsChild:(struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})child;
- (id)newTakeChildrenAmong:(id)among;
- (float)opticalLeading;
- (void)orderedInsert:(id)insert usingSelector:(SEL)selector;
- (_Bool)overlapsHorizontallyWith:(id)with;
- (_Bool)overlapsVerticallyWith:(id)with;
- (float)referenceAdvanceWidth;
- (struct CGRect {
    struct CGPoint {
        double x0;
        double x1;
    } x0;
    struct CGSize {
        double x0;
        double x1;
    } x1;
})renderedBounds;
- (void)resizeWith:(id)with;
- (double)rotationAngle;
- (void)setAnchor:(struct CGPoint {
    double x0;
    double x1;
})anchor;
- (void)setChunkPosition:(unsigned int)position;
- (void)setInsertionOrder:(long long)order;
- (void)setShrinksWithChildren:(_Bool)children;
- (_Bool)shrinksWithChildren;
- (void)translateObjectYBy:(double)yby;

@end

#endif /* CPChunk_h */
